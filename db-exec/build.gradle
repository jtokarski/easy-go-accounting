
plugins {
    id 'java'
    alias libs.plugins.springDependencyManagementPlugin
    alias libs.plugins.springBootPlugin
}

group = 'org.defendev'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    testImplementation group: 'com.oracle.database.jdbc', name: 'ojdbc11'
    testImplementation libs.apacheCommonsText
    testImplementation libs.flywaydb
    testImplementation libs.defendevCommonJdk
    testImplementation libs.defendevCommonFixtures
    testImplementation project(':domain-financial-accounting')
}

test {
    useJUnitPlatform()
}

tasks.register('createEasygoSysSchema', org.gradle.api.tasks.testing.Test) {
    useJUnitPlatform()
    /*
     * This is an equivalent to running from command line:
     *   ./gradlew test --tests "org.defendev.easygo.devops.dbexec.DatabaseMaintananceTest.createEasygoSysSchema"
     *
     */
    setTestNameIncludePatterns(['org.defendev.easygo.devops.dbexec.DatabaseMaintananceTest.createEasygoSysSchema'])
}

def oracleBaselineTask = tasks.register('oracleBaseline', org.gradle.api.tasks.testing.Test) {
    useJUnitPlatform()
    setTestNameIncludePatterns(['org.defendev.easygo.devops.dbmigration.FlywayMigrationTest.oracleBaseline'])
}

def oracleMigrateTask = tasks.register('oracleMigrate', org.gradle.api.tasks.testing.Test) {
    useJUnitPlatform()
    setTestNameIncludePatterns(['org.defendev.easygo.devops.dbmigration.FlywayMigrationTest.oracleMigrate'])
}
oracleMigrateTask.configure { Test task -> task.mustRunAfter(oracleBaselineTask) }

def w = tasks.register('oracleBaselineAndMigrate', org.gradle.api.DefaultTask) {
    dependsOn oracleBaselineTask
    dependsOn oracleMigrateTask
}
