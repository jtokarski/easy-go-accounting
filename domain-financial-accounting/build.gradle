
plugins {
    id 'java'
    alias libs.plugins.springDependencyManagementPlugin
    alias libs.plugins.springBootPlugin
}

group = 'org.defendev'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

bootJar {
    enabled = false
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-log4j2"
    modules {
        module("org.springframework.boot:spring-boot-starter-logging") {
            replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
        }
    }
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
    implementation libs.defendevCommonJdk
    implementation libs.defendevCommonFixtures
    implementation libs.defendevCommonSpring6
    implementation project(':domain-user-identity-api')
    annotationProcessor group: 'org.hibernate.orm', name: 'hibernate-jpamodelgen'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}

configurations {
    testImplementation.extendsFrom compileOnly
}

test {
    useJUnitPlatform()
}

/*
 * The sourceSets configuration is necessary for IntelliJ IDEA to correctly recognize the classes generated
 * by JPA-Modelgen. This is probably a bug in IntelliJ (Gradle build from CLI works fine),
 * so consider REMOVING it in the future. See:
 *   - https://stackoverflow.com/questions/54218556/how-to-generate-jpa-metamodel-with-gradle-5-x
 *   - https://stackoverflow.com/questions/49830187/how-to-use-jpa-metamodel-with-gradle-intellij-idea/53651319#53651319
 */
sourceSets.main.java.srcDirs += "${buildDir}/generated"

